/* // CSC Project 2 editged by Berry Grant IV 
// Game: War. 
// if one card value is higher than another then that card wins that round.

 */
package stuGrant;

import helperCards.Card;
import helperCards.MultiCard;
import helpers.Utility;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author klaydejr
 */
public class GrantPanel extends javax.swing.JPanel implements MouseListener, MouseMotionListener{

    private Font myFont;
    
    private MultiCard multiCard;
    private Card cardOne, cardTwo;
    
    
    public MyCard [] myCardList;
    
    private MyCard myCardOne, myCardTwo;
    private ArrayList<MyCard> myList;
    
    
    
    private Integer playerOnePoints;
    private Integer playerTwoPoints;
    
    
    
    
    
    /**
     * Creates new form MyPanel_1
     */
    public GrantPanel() {
        initComponents();
        
        myFont = new Font("Serif", Font.BOLD, 22);

        multiCard = new MultiCard();
        
        int randomCardIndex = Utility.getRandomFromTo(0, 51);
        cardOne = multiCard.getCardAtIndex(randomCardIndex);
        
        myCardOne = new MyCard(cardOne.getSuit(),cardOne.getValue(), cardOne.getOver(),cardOne.getDown(), cardOne.getImage());

        randomCardIndex = Utility.getRandomFromTo(0, 51);
        cardTwo = multiCard.getCardAtIndex(randomCardIndex);
        
        myCardTwo = new MyCard(cardTwo.getSuit(),cardTwo.getValue(), cardTwo.getOver(),cardTwo.getDown(), cardTwo.getImage());
        
        
        cardOne.setOver(50);
        cardOne.setDown(50);
        cardTwo.setOver(50);
        cardTwo.setDown(150);
        
        playerOnePoints = 0;
        playerTwoPoints = 0;
        
        myCardOne.setOver(50);
        myCardOne.setDown(50);
        myCardTwo.setOver(50);
        myCardTwo.setDown(150);
        
        myList = new ArrayList<MyCard>();
        myList.add(myCardOne);
        myList.add(myCardTwo);
          
        
    }
    
    
    
    public void useMyCardArrayList(){
        
        myCardList = new MyCard [2];
        myCardList[0] = new MyCard();
        myCardList[1] = new MyCard();
        
        
        
       
        
        
    }
    
    
    
    @Override
    public void paintComponent(Graphics g) 
    {
        super.paintComponent(g);
 
        g.setColor(new Color(200,255,200));
        g.fillRect(0, 0, 1000, 1000);
        g.setFont(myFont);
        
        g.setColor(Color.BLACK);
       
        for( int i =0 ; i< myList.size(); i++){
            myList.get(i).drawMyCard(g, this);
        }
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playButton = new javax.swing.JButton();
        tallyButton = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        endGameButton = new javax.swing.JButton();
        viewGameRules = new javax.swing.JButton();

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        tallyButton.setText("Tally");
        tallyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallyButtonActionPerformed(evt);
            }
        });

        newGameButton.setText("Start A New Game");
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });

        endGameButton.setText("End Game");
        endGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameButtonActionPerformed(evt);
            }
        });

        viewGameRules.setText("Game Rules");
        viewGameRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewGameRulesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(269, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(newGameButton)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tallyButton)
                                .addComponent(playButton))
                            .addGap(21, 21, 21)))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewGameRules)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(newGameButton)
                .addGap(48, 48, 48)
                .addComponent(playButton)
                .addGap(18, 18, 18)
                .addComponent(tallyButton)
                .addGap(18, 18, 18)
                .addComponent(endGameButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(viewGameRules)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        // TODO add your handling code here:
        
        
        int randomCardIndex = Utility.getRandomFromTo(0, 51);
        cardOne = multiCard.getCardAtIndex(randomCardIndex);
        
        myCardOne = new MyCard(cardOne.getSuit(),cardOne.getValue(), cardOne.getOver(),cardOne.getDown(), cardOne.getImage());
        

        randomCardIndex = Utility.getRandomFromTo(0, 51);
        cardTwo = multiCard.getCardAtIndex(randomCardIndex);
        
        myCardTwo = new MyCard(cardTwo.getSuit(),cardTwo.getValue(), cardTwo.getOver(),cardTwo.getDown(), cardTwo.getImage());
        
        
        myCardOne.setOver(50);
        myCardOne.setDown(50);
        myCardTwo.setOver(50);
        myCardTwo.setDown(150);
        
        myList = new ArrayList<MyCard>();
        myList.add(myCardOne);
        myList.add(myCardTwo);
        
       for( int i =0 ; i< myList.size(); i++){
            myList.get(i).flipCard();
        }
        
        repaint();
        
    }//GEN-LAST:event_playButtonActionPerformed

    private void tallyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tallyButtonActionPerformed
        // TODO add your handling code here:
        
        
        if(cardOne.getValue() > cardTwo.getValue()){
//        
            playerOnePoints++;
            System.out.println("Player One Gets a Point and Now Has " + playerOnePoints + "Points");
            
            
        }
        else{
//         
            playerTwoPoints++; 
            System.out.println("Player Two Gets a Point and Now Has " + playerTwoPoints + " Points");
         
            
        }
        
    }//GEN-LAST:event_tallyButtonActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        // TODO add your handling code here:
        
       
        
         for( int i =0 ; i< myList.size(); i++){
            myList.get(i).flipCard();
        }
         
       playerOnePoints = 0;
       playerTwoPoints = 0; 
        
        repaint();
        
        
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void endGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("GAME OVER");
        System.out.println("Player One Has " + playerOnePoints + " Points");
        System.out.println("Player Two Has " + playerTwoPoints + " Points");
        
        if ( playerOnePoints > playerTwoPoints)
        {
        
             System.out.println("CONGRATULATIONS PLAYER ONE!!!! YOU WIN!!!!");
             JOptionPane.showMessageDialog(this, "CONGRATULATIONS PLAYER ONE!!!! YOU WIN!!!!");
             
        }    
        
        else{
            System.out.println("CONGRATULATIONS PLAYER TWO!!!! YOU WIN!!!!");
            JOptionPane.showMessageDialog(this, "CONGRATULATIONS PLAYER TWO!!!! YOU WIN!!!!");
        }
       
        
    }//GEN-LAST:event_endGameButtonActionPerformed

    private void viewGameRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewGameRulesActionPerformed
        // TODO add your handling code here:
        
       JOptionPane.showMessageDialog(this, "Here are the Rules and Directions \n Each Player Has a Card \n The Top Card is Player One"
               + "\n The Bottom Card is Player Two "
               + "\n The Cards are Then Compared"
               + "\n The Card With The Higher Value Gets A Point"
               + "\n To Play Another Round press Play"
               + "\n To Count The Points Of That Round press Tally"
               + "\n When Your Are Done Playing The Amount Of Rounds You Desire"
               + "\n Press End Game To See Who Won");

       
    }//GEN-LAST:event_viewGameRulesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton endGameButton;
    private javax.swing.JButton newGameButton;
    private javax.swing.JButton playButton;
    private javax.swing.JButton tallyButton;
    private javax.swing.JButton viewGameRules;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me) {
        System.out.println("Mouse Clicked   " + me.getX() + "  " + me.getY());
    }

    @Override
    public void mousePressed(MouseEvent me) {
       System.out.println("Mouse Pressed   " + me.getX() + "  " + me.getY());
    }

    @Override
    public void mouseReleased(MouseEvent me) {
        System.out.println("Mouse Released   " + me.getX() + "  " + me.getY());
    }

    @Override
    public void mouseEntered(MouseEvent me) {
       System.out.println("Mouse Entered   " + me.getX() + "  " + me.getY());
    }

    @Override
    public void mouseExited(MouseEvent me) {
        System.out.println("Mouse Exited   " + me.getX() + "  " + me.getY());
    }
    
    @Override
    public void mouseDragged(MouseEvent me) {
        System.out.println("Mouse Dragged   " + me.getX() + "  " + me.getY());
    }

    @Override
    public void mouseMoved(MouseEvent me) {
        System.out.println("Mouse Moved   " + me.getX() + "  " + me.getY());
    }
}
