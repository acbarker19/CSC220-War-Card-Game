/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demoReadWrite;

import helpers.In;
import helpers.Out;

/**
 *
 * @author klaydejr
 */
public class ReadWriteTestFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReadWriteTestFrame
     */
    public ReadWriteTestFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        readBasicButton = new javax.swing.JButton();
        writeBasicButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        myTextArea = new javax.swing.JTextArea();
        readFromPersonDataButton = new javax.swing.JButton();
        writeToPersonDataButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        readBasicButton.setText("read basic");
        readBasicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readBasicButtonActionPerformed(evt);
            }
        });

        writeBasicButton.setText("write basic");
        writeBasicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeBasicButtonActionPerformed(evt);
            }
        });

        myTextArea.setColumns(20);
        myTextArea.setRows(5);
        jScrollPane1.setViewportView(myTextArea);

        readFromPersonDataButton.setText("read from personData.txt");
        readFromPersonDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readFromPersonDataButtonActionPerformed(evt);
            }
        });

        writeToPersonDataButton.setText("write to personData.txt");
        writeToPersonDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeToPersonDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(writeBasicButton)
                    .addComponent(readBasicButton))
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(readFromPersonDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(writeToPersonDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(readBasicButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(writeBasicButton)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(readFromPersonDataButton)
                        .addGap(40, 40, 40)
                        .addComponent(writeToPersonDataButton)
                        .addGap(0, 52, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readBasicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readBasicButtonActionPerformed
        System.out.println("read basic");
        
        In in;
        
        //NOTE: The following lines are copied from 476 to 487 of In.java
        //      (EXCEPT THE FILE NAME WAY CHANGED TO: "test.txt")
        
        // read one line at a time from file in current directory
        System.out.println("readLine() from current directory");
        System.out.println("---------------------------------------------------------------------------");
        try {
            in = new In("test.txt");
            while (!in.isEmpty()) {
                String s = in.readLine();
                System.out.println(s);
            }
        }
        catch (Exception e) { System.out.println(e); }
        System.out.println();

    }//GEN-LAST:event_readBasicButtonActionPerformed

    private void writeBasicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeBasicButtonActionPerformed
        System.out.println("write basic");
        
        Out out;
        
        //NOTE: The following lines are copied from 313 to 318 of Out.java
        
        // write to a file
        out = new Out("test.txt");
        out.println("one");
        out.println("two");
        out.println("three");
        out.println("another line");
        out.close();
    }//GEN-LAST:event_writeBasicButtonActionPerformed

    private void readFromPersonDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readFromPersonDataButtonActionPerformed
        System.out.println("readFromPersonDataButton");
        
        String dataFromFile = "";
        In in;
        
        try {
            in = new In("./personData.txt");
            while (!in.isEmpty()) {
                String s = in.readLine();
                System.out.println(s);
                
                dataFromFile += s+"\n";
                
            }
        }
        catch (Exception e) { System.out.println(e); }
        System.out.println();
        
        myTextArea.setText(dataFromFile);
        
    }//GEN-LAST:event_readFromPersonDataButtonActionPerformed

    private void writeToPersonDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeToPersonDataButtonActionPerformed
        System.out.println("writeToPersonDataButton");
        
        String theData = myTextArea.getText();
        System.out.println("theData from myTextArea:\n"+theData+"\n\n");
        
        Out out;
        out = new Out("./personData.txt");
        out.println(theData);
        out.close();
    }//GEN-LAST:event_writeToPersonDataButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReadWriteTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReadWriteTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReadWriteTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReadWriteTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReadWriteTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea myTextArea;
    private javax.swing.JButton readBasicButton;
    private javax.swing.JButton readFromPersonDataButton;
    private javax.swing.JButton writeBasicButton;
    private javax.swing.JButton writeToPersonDataButton;
    // End of variables declaration//GEN-END:variables
}
